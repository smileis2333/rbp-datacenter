<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.regent.rbp.api.dao.retail.RetailOrderBillDao">

    <insert id="batchInsertGoodsList">
        INSERT INTO rbp_retail_order_bill_goods (id,bill_id,sales_order_bill_goods_id,sale_type,retail_goods_type,process_status,online_status,
        refund_status,after_sale_process_status,return_status,tag_price,balance_price,discount,barcode,goods_id,color_id,long_id,
        size_id,quantity,remark,created_by,updated_by)
        VALUES
        <foreach item="item" index="index" collection="billGoodsList" separator=",">
            (#{item.id}, #{item.billId},#{item.salesOrderBillGoodsId},#{item.saleType},#{item.retailGoodsType},#{item.processStatus},#{item.onlineStatus},
            #{item.refundStatus},#{item.afterSaleProcessStatus},#{item.returnStatus},#{item.tagPrice},#{item.balancePrice},#{item.discount},#{item.barcode},#{item.goodsId},#{item.colorId},#{item.longId},
            #{item.sizeId},#{item.quantity},#{item.remark},#{item.createdBy},#{item.updatedBy})
        </foreach>
    </insert>

    <update id="updateDistributionStatus" parameterType="java.lang.Long">
        update rbp_retail_order_bill a set status = 4, updated_by = #{userId}, updated_time = now(),
        distribution_status = (select if(cunt > 0, 1, 2) from (
            select count(*) cunt from rbp_retail_order_bill_goods rrobg
            where rrobg.process_status = 0 and rrobg.bill_id = a.id) t)
        where id = #{id}
    </update>

    <update id="updateSendStatus" parameterType="java.lang.Long">
        update rbp_retail_order_bill a set online_status = 5, status = 5, updated_by = #{userId}, updated_time = now(),
           distribution_status = 2, send_status = 2
        where id = #{id}
    </update>

    <select id="getDataCenterRetailOrderSampleList" resultType="com.regent.rbp.api.dto.retail.RetailOrderSampleDto">
        select a.id,a.bill_no,a.online_order_code,a.online_platform_type_id,a.online_platform_id,b.code as onlinePlatformCode from rbp_retail_order_bill a
        inner join rbp_online_platform b on b.status = 1 and b.id = a.online_platform_id
        WHERE a.online_platform_type_id != 0 and a.online_order_code is not null
        and a.id in (<foreach item="id" collection="billIdList" open="" separator="," close="" >#{id}</foreach>)
    </select>

    <select id="getOrderBusinessPersonDto" resultType="com.regent.rbp.api.dto.retail.OrderBusinessPersonDto">
        select b.code as guideNo, c.code as channelNo
        from rbp_retail_order_bill_dstb a
        inner join rbp_user b on a.dstb_id = b.id
        left join rbp_channel c on b.channel_id = c.id
        where a.bill_id = #{id}
        order by a.id
        limit 1
    </select>

    <select id="getRetailOrderInfoDto" resultType="com.regent.rbp.api.dto.retail.RetailOrderInfoDto">
        select a.manual_id as outTradeNo, b.buyer_nickname as buyerNick,b.contacts_person as receiver, b.province provinceName, b.city cityName,
               b.county as areaName, b.address as addrDetail, b.mobile, a.buyer_notes as userRemark, b.logistics_amount as freightAmount, a.pay_time as payTime
        from rbp_retail_order_bill a
                 left join rbp_retail_order_bill_customer_info b on a.id = b.bill_id
        where a.id = #{id}
    </select>

    <select id="getRetalOrderGoodsInfoDto" resultType="com.regent.rbp.api.dto.retail.RetalOrderGoodsInfoDto">
        select b.name as goodsName, a.barcode as skuCode, a.balance_price as unitPrice, a.remark as buyerRemark,
               sum(a.quantity) as skuQty
        from rbp_retail_order_bill_goods a
                 inner join rbp_goods b on a.goods_id  = b.id
        where a.bill_id  = #{id}
        group by b.name, a.barcode, a.balance_price, a.remark
    </select>

</mapper>